- name: setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      comment: roboshop system user
      system: true
      shell: /sbin/nologin
      home: /app

  # Safe to remove directory, because 2nd time if we run it will download freshly. no error if does not exist
  - name: remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
    state: directory
    path: /app

  - name: Delete catalogue file
    ansible.builtin.file:
      path: /tmp/catalogue.zip
      state: absent

  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip

  - name: extract catalogue appilication
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: insatll mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: connect mongodb to catalogue
    ansible.builtin.command: mongosh mongodb.daws86s.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  - name: evaluate catalogue database
    community.mongodb.mongodb_shell:
      login_host: poguri.fun
      eval: db.getMongo().getDBnames().indexOf('catalogue')
    register: catalogue_output

  - name: print catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load products into mongodb
    ansible.builtin.shell: mongosh --host mongodb.poguri.fun </app/db/master-data.js
    when: catalogue_output.stdout | int < 0

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      start: started
      enabled: yes

  - name: deamon reload enable and start
    ansible.builtin.systemd_service:
    name: catalogue
    start: started
    enable: true
    deamon_reload: true

